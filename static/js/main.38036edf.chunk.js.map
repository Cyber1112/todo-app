{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","todoRef","React","createRef","addItemOnList","e","preventDefault","todoItem","todo","current","value","isCompleted","props","addToDoItems","currentTarget","reset","id","onSubmit","this","type","name","ref","required","Component","TodoList","handleChange","event","updateTodo","todoItems","console","log","updateTodos","index","toggleCheckbox","checked","className","onChange","onClick","removeToDoItem","App","state","item","items","Date","now","setState","todos","key","updatedTodo","Object","keys","map","ReactDOM","render","document","getElementById"],"mappings":"0PAyBeA,E,4MAtBbC,QAAUC,IAAMC,Y,EAEhBC,cAAgB,SAAAC,GACdA,EAAEC,iBACF,IAAMC,EAAW,CACfC,KAAM,EAAKP,QAAQQ,QAAQC,MAC3BC,aAAa,GAEf,EAAKC,MAAMC,aAAaN,GACxBF,EAAES,cAAcC,S,4CAGlB,WACE,OACE,uBAAMC,GAAG,gBAAgBC,SAAUC,KAAKd,cAAxC,UACE,uBAAOe,KAAK,OAAOC,KAAK,aAAaC,IAAKH,KAAKjB,QAASqB,UAAQ,IAChE,kD,GAjBepB,IAAMqB,W,OC8CdC,E,4MA7CbC,aAAe,SAAAC,GACb,IAAMC,EAAU,2BACX,EAAKf,MAAMgB,WADA,kBAEbF,EAAMZ,cAAcM,KAAOM,EAAMZ,cAAcJ,QAElDmB,QAAQC,IAAIJ,EAAMZ,cAAcJ,OAChC,EAAKE,MAAMmB,YAAY,EAAKnB,MAAMoB,MAAOL,I,EAG3CM,eAAiB,SAAAP,GACf,IAAMC,EAAU,2BACX,EAAKf,MAAMgB,WADA,kBAEbF,EAAMZ,cAAcM,KAAOM,EAAMZ,cAAcoB,UAElD,EAAKtB,MAAMmB,YAAY,EAAKnB,MAAMoB,MAAOL,I,4CAG3C,WAAU,IAAD,OACP,OACE,qBAAIQ,UAAWjB,KAAKN,MAAMgB,UAAUjB,YAAc,OAAS,KAA3D,UACE,uBACEQ,KAAK,WACLC,KAAK,cACLc,QAAShB,KAAKN,MAAMgB,UAAUjB,YAC9ByB,SAAUlB,KAAKe,iBAGjB,uBACEd,KAAK,OACLC,KAAK,OACLV,MAAOQ,KAAKN,MAAMgB,UAAUpB,KAC5B4B,SAAUlB,KAAKO,eAGjB,wBACEU,UAAU,UACVE,QAAS,kBAAM,EAAKzB,MAAM0B,eAAe,EAAK1B,MAAMoB,QAFtD,sB,GAnCe9B,IAAMqB,WCgDdgB,E,4MA7CbC,MAAQ,CACNZ,UAAW,I,EAGbf,aAAe,SAAA4B,GACb,IAAMC,EAAK,eAAQ,EAAKF,MAAMZ,WAC9BC,QAAQC,IAAIY,GACZA,EAAM,OAAD,OAAQC,KAAKC,QAAWH,EAC7B,EAAKI,SAAS,CACZjB,UAAWc,K,EAIfJ,eAAiB,SAAAG,GACf,IAAMK,EAAK,eAAQ,EAAKN,MAAMZ,kBACvBkB,EAAML,GACb,EAAKI,SAAS,CAAEjB,UAAWkB,K,EAG7Bf,YAAc,SAACgB,EAAKC,GAClB,IAAMF,EAAK,eAAQ,EAAKN,MAAMZ,WAC9BkB,EAAMC,GAAOC,EACb,EAAKH,SAAS,CAAEjB,UAAWkB,K,4CAG7B,WAAU,IAAD,OACP,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAUtB,aAAcK,KAAKL,eAC7B,6BACGoC,OAAOC,KAAKhC,KAAKsB,MAAMZ,WAAWuB,KAAI,SAAAJ,GAAG,OACxC,cAAC,EAAD,CAEEf,MAAOe,EACPnB,UAAW,EAAKY,MAAMZ,UAAUmB,GAChCT,eAAgB,EAAKA,eACrBP,YAAa,EAAKA,aAJbgB,e,GAjCDxB,aCElB6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.38036edf.chunk.js","sourcesContent":["import React from \"react\";\n\nclass TodoForm extends React.Component {\n  todoRef = React.createRef();\n\n  addItemOnList = e => {\n    e.preventDefault();\n    const todoItem = {\n      todo: this.todoRef.current.value,\n      isCompleted: false\n    };\n    this.props.addToDoItems(todoItem);\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form id=\"todoList-form\" onSubmit={this.addItemOnList}>\n        <input type=\"text\" name=\"todosTxtbx\" ref={this.todoRef} required />\n        <button>Add +</button>\n      </form>\n    );\n  }\n}\n\nexport default TodoForm;\n","import React from \"react\";\n\nclass TodoList extends React.Component {\n  handleChange = event => {\n    const updateTodo = {\n      ...this.props.todoItems,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    console.log(event.currentTarget.value);\n    this.props.updateTodos(this.props.index, updateTodo);\n  };\n\n  toggleCheckbox = event => {\n    const updateTodo = {\n      ...this.props.todoItems,\n      [event.currentTarget.name]: event.currentTarget.checked\n    };\n    this.props.updateTodos(this.props.index, updateTodo);\n  };\n\n  render() {\n    return (\n      <li className={this.props.todoItems.isCompleted ? \"done\" : null}>\n        <input\n          type=\"checkbox\"\n          name=\"isCompleted\"\n          checked={this.props.todoItems.isCompleted}\n          onChange={this.toggleCheckbox}\n          // checked={this.props.todoItems.isChecked}\n        />\n        <input\n          type=\"text\"\n          name=\"todo\"\n          value={this.props.todoItems.todo}\n          onChange={this.handleChange}\n        />\n        {/* <button>Edit</button> */}\n        <button\n          className=\"del-btn\"\n          onClick={() => this.props.removeToDoItem(this.props.index)}\n        >\n          x\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nclass App extends Component {\n  state = {\n    todoItems: {}\n  };\n\n  addToDoItems = item => {\n    const items = { ...this.state.todoItems };\n    console.log(items);\n    items[`item${Date.now()}`] = item;\n    this.setState({\n      todoItems: items\n    });\n  };\n\n  removeToDoItem = item => {\n    const todos = { ...this.state.todoItems };\n    delete todos[item];\n    this.setState({ todoItems: todos });\n  };\n\n  updateTodos = (key, updatedTodo) => {\n    const todos = { ...this.state.todoItems };\n    todos[key] = updatedTodo;\n    this.setState({ todoItems: todos });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoForm addToDoItems={this.addToDoItems} />\n        <ul>\n          {Object.keys(this.state.todoItems).map(key => (\n            <TodoList\n              key={key}\n              index={key}\n              todoItems={this.state.todoItems[key]}\n              removeToDoItem={this.removeToDoItem}\n              updateTodos={this.updateTodos}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}